% Resample by sampling importance resampling (SIR) algorithm

function likArrayId=ReSampleMfPrevalence(likelihoodArray,numNewRuns)

[numRuns,total_years]=size(likelihoodArray); % 200,000 1 two values
likArrayId = zeros(numNewRuns,total_years); % 500, 1 one matrix

for cYear=1:total_years % unnecessary total_years===1

    likelihoodArray(isnan(likelihoodArray(:,cYear)),cYear)=0;
    %% find out all the nan elements, and value them zero

    % convert likelihoods to probability weights
    sumLik = sum(likelihoodArray(:,cYear));
    probArray = likelihoodArray(:,cYear)/sumLik;
    maxProb = max(probArray);

    %implement rejection sampling from the probability
    %distribution generated by the likelihood calculations
    if ~(isnan(maxProb))
        iNum = 0;
        iReject = 0;
        while iNum < numNewRuns
            r = ceil((numRuns-1)*rand);
            rndNo = rand*maxProb;
            if rndNo <= probArray(r)
                iNum = iNum + 1;
                likArrayId(iNum,cYear)=r; % record the indice of the likelihood
                iReject = 0;
            else
                iReject = iReject - 1; % here should be iReject + 1 ?
              % maybe we can add another line to avoid repeat of index r
              % thus we could ensure 500 SIR samples without repeating
            end
        end
    end
end

%% return 500 parameters sets index
